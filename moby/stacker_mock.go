// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quay/claircore/moby (interfaces: Stacker)

// Package moby is a generated GoMock package.
package moby

import (
	gomock "github.com/golang/mock/gomock"
	claircore "github.com/quay/claircore"
	reflect "reflect"
)

// MockStacker is a mock of Stacker interface
type MockStacker struct {
	ctrl     *gomock.Controller
	recorder *MockStackerMockRecorder
}

// MockStackerMockRecorder is the mock recorder for MockStacker
type MockStackerMockRecorder struct {
	mock *MockStacker
}

// NewMockStacker creates a new mock instance
func NewMockStacker(ctrl *gomock.Controller) *MockStacker {
	mock := &MockStacker{ctrl: ctrl}
	mock.recorder = &MockStackerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStacker) EXPECT() *MockStackerMockRecorder {
	return m.recorder
}

// Stack mocks base method
func (m *MockStacker) Stack(arg0 string, arg1 []*claircore.Layer) (*claircore.Layer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stack", arg0, arg1)
	ret0, _ := ret[0].(*claircore.Layer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Stack indicates an expected call of Stack
func (mr *MockStackerMockRecorder) Stack(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stack", reflect.TypeOf((*MockStacker)(nil).Stack), arg0, arg1)
}
